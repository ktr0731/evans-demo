// Code generated by protoc-gen-go. DO NOT EDIT.
// source: api.proto

/*
Package api is a generated protocol buffer package.

It is generated from these files:
	api.proto

It has these top-level messages:
	User
	RegisterUsersRequest
	RegisterUsersResponse
	ListUsersRequest
	ListUsersResponse
	GetUserRequest
	GetUserResponse
*/
package api

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Language int32

const (
	Language_ENGLISH  Language = 0
	Language_JAPANESE Language = 1
)

var Language_name = map[int32]string{
	0: "ENGLISH",
	1: "JAPANESE",
}
var Language_value = map[string]int32{
	"ENGLISH":  0,
	"JAPANESE": 1,
}

func (x Language) String() string {
	return proto.EnumName(Language_name, int32(x))
}
func (Language) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type Gender int32

const (
	Gender_MALE   Gender = 0
	Gender_FEMALE Gender = 1
	Gender_OTHER  Gender = 2
)

var Gender_name = map[int32]string{
	0: "MALE",
	1: "FEMALE",
	2: "OTHER",
}
var Gender_value = map[string]int32{
	"MALE":   0,
	"FEMALE": 1,
	"OTHER":  2,
}

func (x Gender) String() string {
	return proto.EnumName(Gender_name, int32(x))
}
func (Gender) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type User struct {
	FirstName string `protobuf:"bytes,1,opt,name=first_name,json=firstName" json:"first_name,omitempty"`
	LastName  string `protobuf:"bytes,2,opt,name=last_name,json=lastName" json:"last_name,omitempty"`
	Gender    Gender `protobuf:"varint,3,opt,name=gender,enum=api.Gender" json:"gender,omitempty"`
}

func (m *User) Reset()                    { *m = User{} }
func (m *User) String() string            { return proto.CompactTextString(m) }
func (*User) ProtoMessage()               {}
func (*User) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *User) GetFirstName() string {
	if m != nil {
		return m.FirstName
	}
	return ""
}

func (m *User) GetLastName() string {
	if m != nil {
		return m.LastName
	}
	return ""
}

func (m *User) GetGender() Gender {
	if m != nil {
		return m.Gender
	}
	return Gender_MALE
}

type RegisterUsersRequest struct {
	Users []*User `protobuf:"bytes,1,rep,name=users" json:"users,omitempty"`
}

func (m *RegisterUsersRequest) Reset()                    { *m = RegisterUsersRequest{} }
func (m *RegisterUsersRequest) String() string            { return proto.CompactTextString(m) }
func (*RegisterUsersRequest) ProtoMessage()               {}
func (*RegisterUsersRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *RegisterUsersRequest) GetUsers() []*User {
	if m != nil {
		return m.Users
	}
	return nil
}

type RegisterUsersResponse struct {
	Message string `protobuf:"bytes,1,opt,name=message" json:"message,omitempty"`
}

func (m *RegisterUsersResponse) Reset()                    { *m = RegisterUsersResponse{} }
func (m *RegisterUsersResponse) String() string            { return proto.CompactTextString(m) }
func (*RegisterUsersResponse) ProtoMessage()               {}
func (*RegisterUsersResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *RegisterUsersResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type ListUsersRequest struct {
}

func (m *ListUsersRequest) Reset()                    { *m = ListUsersRequest{} }
func (m *ListUsersRequest) String() string            { return proto.CompactTextString(m) }
func (*ListUsersRequest) ProtoMessage()               {}
func (*ListUsersRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

type ListUsersResponse struct {
	Users []*ListUsersResponse_User `protobuf:"bytes,1,rep,name=users" json:"users,omitempty"`
}

func (m *ListUsersResponse) Reset()                    { *m = ListUsersResponse{} }
func (m *ListUsersResponse) String() string            { return proto.CompactTextString(m) }
func (*ListUsersResponse) ProtoMessage()               {}
func (*ListUsersResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *ListUsersResponse) GetUsers() []*ListUsersResponse_User {
	if m != nil {
		return m.Users
	}
	return nil
}

type ListUsersResponse_User struct {
	Id   string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
}

func (m *ListUsersResponse_User) Reset()                    { *m = ListUsersResponse_User{} }
func (m *ListUsersResponse_User) String() string            { return proto.CompactTextString(m) }
func (*ListUsersResponse_User) ProtoMessage()               {}
func (*ListUsersResponse_User) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4, 0} }

func (m *ListUsersResponse_User) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *ListUsersResponse_User) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type GetUserRequest struct {
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
}

func (m *GetUserRequest) Reset()                    { *m = GetUserRequest{} }
func (m *GetUserRequest) String() string            { return proto.CompactTextString(m) }
func (*GetUserRequest) ProtoMessage()               {}
func (*GetUserRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *GetUserRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type GetUserResponse struct {
	User *User `protobuf:"bytes,1,opt,name=user" json:"user,omitempty"`
}

func (m *GetUserResponse) Reset()                    { *m = GetUserResponse{} }
func (m *GetUserResponse) String() string            { return proto.CompactTextString(m) }
func (*GetUserResponse) ProtoMessage()               {}
func (*GetUserResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *GetUserResponse) GetUser() *User {
	if m != nil {
		return m.User
	}
	return nil
}

func init() {
	proto.RegisterType((*User)(nil), "api.User")
	proto.RegisterType((*RegisterUsersRequest)(nil), "api.RegisterUsersRequest")
	proto.RegisterType((*RegisterUsersResponse)(nil), "api.RegisterUsersResponse")
	proto.RegisterType((*ListUsersRequest)(nil), "api.ListUsersRequest")
	proto.RegisterType((*ListUsersResponse)(nil), "api.ListUsersResponse")
	proto.RegisterType((*ListUsersResponse_User)(nil), "api.ListUsersResponse.User")
	proto.RegisterType((*GetUserRequest)(nil), "api.GetUserRequest")
	proto.RegisterType((*GetUserResponse)(nil), "api.GetUserResponse")
	proto.RegisterEnum("api.Language", Language_name, Language_value)
	proto.RegisterEnum("api.Gender", Gender_name, Gender_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for UserService service

type UserServiceClient interface {
	RegisterUsers(ctx context.Context, in *RegisterUsersRequest, opts ...grpc.CallOption) (*RegisterUsersResponse, error)
	ListUsers(ctx context.Context, in *ListUsersRequest, opts ...grpc.CallOption) (*ListUsersResponse, error)
	GetUser(ctx context.Context, in *GetUserRequest, opts ...grpc.CallOption) (*GetUserResponse, error)
}

type userServiceClient struct {
	cc *grpc.ClientConn
}

func NewUserServiceClient(cc *grpc.ClientConn) UserServiceClient {
	return &userServiceClient{cc}
}

func (c *userServiceClient) RegisterUsers(ctx context.Context, in *RegisterUsersRequest, opts ...grpc.CallOption) (*RegisterUsersResponse, error) {
	out := new(RegisterUsersResponse)
	err := grpc.Invoke(ctx, "/api.UserService/RegisterUsers", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) ListUsers(ctx context.Context, in *ListUsersRequest, opts ...grpc.CallOption) (*ListUsersResponse, error) {
	out := new(ListUsersResponse)
	err := grpc.Invoke(ctx, "/api.UserService/ListUsers", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) GetUser(ctx context.Context, in *GetUserRequest, opts ...grpc.CallOption) (*GetUserResponse, error) {
	out := new(GetUserResponse)
	err := grpc.Invoke(ctx, "/api.UserService/GetUser", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for UserService service

type UserServiceServer interface {
	RegisterUsers(context.Context, *RegisterUsersRequest) (*RegisterUsersResponse, error)
	ListUsers(context.Context, *ListUsersRequest) (*ListUsersResponse, error)
	GetUser(context.Context, *GetUserRequest) (*GetUserResponse, error)
}

func RegisterUserServiceServer(s *grpc.Server, srv UserServiceServer) {
	s.RegisterService(&_UserService_serviceDesc, srv)
}

func _UserService_RegisterUsers_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RegisterUsersRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).RegisterUsers(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.UserService/RegisterUsers",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).RegisterUsers(ctx, req.(*RegisterUsersRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_ListUsers_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListUsersRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).ListUsers(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.UserService/ListUsers",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).ListUsers(ctx, req.(*ListUsersRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_GetUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetUserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).GetUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.UserService/GetUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).GetUser(ctx, req.(*GetUserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _UserService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "api.UserService",
	HandlerType: (*UserServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "RegisterUsers",
			Handler:    _UserService_RegisterUsers_Handler,
		},
		{
			MethodName: "ListUsers",
			Handler:    _UserService_ListUsers_Handler,
		},
		{
			MethodName: "GetUser",
			Handler:    _UserService_GetUser_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "api.proto",
}

func init() { proto.RegisterFile("api.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 400 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x92, 0xc1, 0x8f, 0x9a, 0x40,
	0x14, 0xc6, 0x01, 0x11, 0xe1, 0xd1, 0x5a, 0xfa, 0xaa, 0x0d, 0xc5, 0x98, 0x92, 0x69, 0x9a, 0x58,
	0x0f, 0xa6, 0xda, 0xa4, 0xbd, 0xf4, 0xe2, 0x81, 0x6a, 0x1b, 0x6a, 0x1b, 0x6c, 0xcf, 0x9b, 0xd9,
	0x75, 0x96, 0x4c, 0xb2, 0x22, 0xcb, 0xe0, 0xfe, 0x97, 0xfb, 0x3f, 0x6d, 0x18, 0xc0, 0x80, 0xeb,
	0x6d, 0xe6, 0xfb, 0xde, 0x9b, 0xef, 0xcd, 0x6f, 0x06, 0x2c, 0x9a, 0xf2, 0x59, 0x9a, 0x1d, 0xf2,
	0x03, 0x76, 0x68, 0xca, 0x49, 0x0c, 0xfa, 0x7f, 0xc1, 0x32, 0x1c, 0x03, 0xdc, 0xf2, 0x4c, 0xe4,
	0x57, 0x09, 0xdd, 0x33, 0x57, 0xf5, 0xd5, 0x89, 0x15, 0x59, 0x52, 0xd9, 0xd0, 0x3d, 0xc3, 0x11,
	0x58, 0x77, 0xb4, 0x76, 0x35, 0xe9, 0x9a, 0x85, 0x20, 0xcd, 0x0f, 0x60, 0xc4, 0x2c, 0xd9, 0xb1,
	0xcc, 0xed, 0xf8, 0xea, 0xa4, 0xbf, 0xb0, 0x67, 0x45, 0xc8, 0x4a, 0x4a, 0x51, 0x65, 0x91, 0x6f,
	0x30, 0x88, 0x58, 0xcc, 0x45, 0xce, 0xb2, 0x22, 0x50, 0x44, 0xec, 0xfe, 0xc8, 0x44, 0x8e, 0xef,
	0xa1, 0x7b, 0x2c, 0xf6, 0xae, 0xea, 0x77, 0x26, 0xf6, 0xc2, 0x92, 0xbd, 0x45, 0x45, 0x54, 0xea,
	0x64, 0x0e, 0xc3, 0xb3, 0x46, 0x91, 0x1e, 0x12, 0xc1, 0xd0, 0x85, 0xde, 0x9e, 0x09, 0x41, 0xe3,
	0x7a, 0xde, 0x7a, 0x4b, 0x10, 0x9c, 0x90, 0x8b, 0xbc, 0x99, 0x43, 0x32, 0x78, 0xdd, 0xd0, 0xaa,
	0x23, 0xe6, 0xed, 0xf0, 0x91, 0x0c, 0x7f, 0x56, 0xd6, 0x1c, 0xc7, 0x9b, 0x56, 0xc0, 0xfa, 0xa0,
	0xf1, 0x5d, 0x15, 0xac, 0xf1, 0x1d, 0x22, 0xe8, 0x0d, 0x38, 0x72, 0x4d, 0x7c, 0xe8, 0xaf, 0x98,
	0x3c, 0xab, 0xbe, 0xed, 0x59, 0x17, 0xf9, 0x0c, 0xaf, 0x4e, 0x15, 0xd5, 0x4c, 0x63, 0xd0, 0x8b,
	0x24, 0x59, 0xd4, 0xe2, 0x21, 0xe5, 0xe9, 0x47, 0x30, 0x43, 0x9a, 0xc4, 0x47, 0x1a, 0x33, 0xb4,
	0xa1, 0x17, 0x6c, 0x56, 0xe1, 0xcf, 0xed, 0xda, 0x51, 0xf0, 0x05, 0x98, 0xbf, 0x96, 0x7f, 0x97,
	0x9b, 0x60, 0x1b, 0x38, 0xea, 0xf4, 0x13, 0x18, 0xe5, 0x03, 0xa0, 0x09, 0xfa, 0xef, 0x65, 0x18,
	0x38, 0x0a, 0x02, 0x18, 0x3f, 0x02, 0xb9, 0x56, 0xd1, 0x82, 0xee, 0x9f, 0x7f, 0xeb, 0x20, 0x72,
	0xb4, 0xc5, 0xa3, 0x0a, 0x76, 0x11, 0xb0, 0x65, 0xd9, 0x03, 0xbf, 0x61, 0xb8, 0x86, 0x97, 0x2d,
	0xe0, 0xf8, 0x4e, 0xce, 0x70, 0xe9, 0xf5, 0x3c, 0xef, 0x92, 0x55, 0x5e, 0x84, 0x28, 0xf8, 0x1d,
	0xac, 0x13, 0x4c, 0x1c, 0x9e, 0xc3, 0x2d, 0x4f, 0x78, 0x7b, 0x99, 0x39, 0x51, 0xf0, 0x2b, 0xf4,
	0x2a, 0x36, 0xf8, 0xa6, 0xfa, 0x51, 0x4d, 0x96, 0xde, 0xa0, 0x2d, 0xd6, 0x7d, 0xd7, 0x86, 0xfc,
	0xde, 0x5f, 0x9e, 0x02, 0x00, 0x00, 0xff, 0xff, 0x95, 0x99, 0xec, 0xd4, 0xeb, 0x02, 0x00, 0x00,
}
